apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'de.mannodermaus.android-junit5'
apply plugin: 'io.fabric'

android {

    compileSdkVersion androidSdk.compileSdkVersion

    defaultConfig {
        applicationId "com.antyzero.autoinposter"
        minSdkVersion androidSdk.minSdkVersion
        targetSdkVersion androidSdk.targetSdkVersion
        versionCode general.versionCode
        versionName general.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation project(':domain')

    implementation "com.android.support:appcompat-v7:${libVersion.android.support.appCompat}"
    implementation "com.android.support.constraint:constraint-layout:${libVersion.android.support.constraint}"
    implementation "io.reactivex.rxjava2:rxandroid:${libVersion.rx.android}"
    implementation("com.crashlytics.sdk.android:crashlytics:${libVersion.crashlytics}@aar") {
        transitive = true;
    }

    //Dagger 2 dependencies
    implementation "com.google.dagger:dagger:${libVersion.google.dagger}"
    kapt "com.google.dagger:dagger-compiler:${libVersion.google.dagger}"
    compileOnly 'org.glassfish:javax.annotation:10.0-b28'

    testImplementation junit5.unitTests()
    testCompileOnly junit5.unitTestsRuntime()

    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}
